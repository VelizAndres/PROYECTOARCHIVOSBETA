/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.meia;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import static java.lang.Integer.parseInt;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author José De León
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbl_photo = new javax.swing.JLabel();
        lbl_usuario = new javax.swing.JLabel();
        lbl_rol = new javax.swing.JLabel();
        backupButton = new javax.swing.JButton();
        btn_Mantenimi = new javax.swing.JButton();
        lbl_logo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btn_indizado = new javax.swing.JButton();
        btn_bandeja_entrada = new javax.swing.JButton();
        btn_bandeja_salida = new javax.swing.JButton();
        btn_correo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setText("BIENVENIDO");

        jLabel2.setText("Usuario");

        jLabel3.setText("Rol");

        lbl_photo.setText("jLabel4");

        lbl_usuario.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lbl_usuario.setText("jLabel5");

        lbl_rol.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lbl_rol.setText("jLabel6");

        backupButton.setText("Crear copia de seguridad");
        backupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupButtonActionPerformed(evt);
            }
        });

        btn_Mantenimi.setText("Mantenimiento");
        btn_Mantenimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MantenimiActionPerformed(evt);
            }
        });

        lbl_logo.setText("logo");

        jButton1.setText("Agregar contactos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_indizado.setText("Listas de distribución");
        btn_indizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_indizadoActionPerformed(evt);
            }
        });

        btn_bandeja_entrada.setText("BANDEJA DE ENTRADA");
        btn_bandeja_entrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bandeja_entradaActionPerformed(evt);
            }
        });

        btn_bandeja_salida.setText("BANDEJA DE ENVIADOS");
        btn_bandeja_salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bandeja_salidaActionPerformed(evt);
            }
        });

        btn_correo.setText("ENVIAR CORREO");
        btn_correo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_correoActionPerformed(evt);
            }
        });

        jButton2.setText("Agregar listas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(lbl_usuario)
                                    .addComponent(jLabel2)
                                    .addComponent(lbl_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btn_Mantenimi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(backupButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(btn_indizado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(151, 151, 151))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(281, 281, 281)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_rol)
                            .addGap(588, 588, 588)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_correo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_bandeja_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_bandeja_salida, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(165, 165, 165))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_usuario)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_indizado)
                            .addComponent(lbl_rol)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Mantenimi)
                        .addGap(18, 18, 18)
                        .addComponent(backupButton)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_bandeja_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_bandeja_salida, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void CrearDescriptorBackup(String usuario)
    {
        try
        {
        File file_descriptorBackup = new File("MEIA\\desc_bitacora_backup.txt");
        Date currentTime = new Date();
        String[] lines = {"nombre_simbolico:bitacora_backup", "fecha_creacion:" + currentTime.toString(),"usuario_creacion:"+ usuario,"fecha_modificacion:" + currentTime.toString(),"usuario_modificacion:"+usuario,"#_registros:1"};
        FileWriter LineWriter = new FileWriter(file_descriptorBackup, true);
        BufferedWriter LineWr = new BufferedWriter(LineWriter);
        for (int i = 0; i < lines.length; i++)
        {
            LineWr.write(lines[i]);
            if (i != lines.length - 1)
            {
            LineWr.newLine();
            }
        }
        LineWr.close();
        LineWriter.close();
        } catch (IOException F) {}
    }
    
    public void ActualizarDescriptorBackup(String usuario)
    {
        try{
            File file_descriptorBackup = new File("MEIA\\desc_bitacora_backup.txt");
            Date now = new Date();
            ArrayList<String> lines = new ArrayList<>(Files.readAllLines(Paths.get(file_descriptorBackup.getAbsolutePath())));
            lines.set(3, "fecha_modificacion:" + now.toString());
            lines.set(4, "usuario_modificacion:" + usuario);
            String[] arrOfStr = lines.get(5).split(":"); 
            int entries = parseInt(arrOfStr[1]) + 1;
            lines.set(5, "#_registros:" + entries);
            
            FileWriter Changer = new FileWriter(file_descriptorBackup, false);
            BufferedWriter LineChanger = new BufferedWriter(Changer);
            for (int i = 0; i < lines.size(); i++)
            {
                LineChanger.write(lines.get(i));
                if (i != lines.size() - 1)
                {
                    LineChanger.newLine();
                }
            }
            LineChanger.close();
            LineChanger.close(); 
            
        }catch(IOException ex){}
    }
    
    public boolean LlenarArchivoBackup (String rutaAbsoluta,String usuario, String fecha)
    {
        File file_bitacoraBackup = new File("MEIA\\bitacora_backup.txt");
        File file_desc_backup = new File ("MEIA\\desc_bitacora_backup.txt");

        String f_usuario = String.format("%-20s", usuario);        
        String f_path = String.format("%-200s", rutaAbsoluta);
        String f_fecha = String.format("%-16s", fecha);
        if (!file_bitacoraBackup.exists())
        {
            //No existe la bitácora, por tanto hay que crearla con los headers
            String ruta_header = String.format("%-200s", "ruta_absoluta");
            String usuario_header = String.format("%-20s", "usuario");
            String fecha_header = String.format("%-16s", "fecha_transaccion");
            String header = ruta_header+"|"+usuario_header+"|"+fecha_header;
            try
            {
                FileWriter HeaderWriter = new FileWriter(file_bitacoraBackup, true);
                BufferedWriter Headerb = new BufferedWriter(HeaderWriter);
                Headerb.write(header + System.getProperty( "line.separator" ));
                Headerb.close();
                HeaderWriter.close();
            }catch(IOException ff){}
        }
        if (!file_desc_backup.exists()) 
        {
            //No existe el descriptor, por tanto hay que crearlo con los datos iniciales
            CrearDescriptorBackup(lbl_usuario.getText());
        }
        else
        {
            //Si hay descriptor, hay que actualizarlo.
            ActualizarDescriptorBackup(lbl_usuario.getText());
        }
        String registro = f_path+"|"+f_usuario+"|"+f_fecha;
        try
        {
            // Esto escribe un registro en la bitácora de backup
                FileWriter Escribir = new FileWriter(file_bitacoraBackup, true);
                BufferedWriter bw = new BufferedWriter(Escribir);
                bw.write(registro+ System.getProperty( "line.separator" ));
                bw.close();
                Escribir.close();             
                return true;
        }
        catch(Exception ex)
        {
            return false;
        } 
        
    }
    
    
    private void backupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupButtonActionPerformed
        JFileChooser ventana = new JFileChooser();
        ventana.setCurrentDirectory(new java.io.File("."));
        ventana.setDialogTitle("Seleccione una carpeta donde crear el respaldo de información");
        ventana.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        ventana.setAcceptAllFileFilterUsed(false);
        String BackupFolderPath = "";
        String DestinationFolder = "";
   
        if (ventana.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
        { 
          BackupFolderPath = ventana.getSelectedFile().getAbsolutePath()+"\\MEIA_Backup";
          DestinationFolder = BackupFolderPath;
          File DirectoryCreator = new File (BackupFolderPath);
          DirectoryCreator.mkdir();
        }  
        File DataDirectory = new File("MEIA\\");
        File [] all = DataDirectory.listFiles();
        Date currentDate = new Date();
        LlenarArchivoBackup(DestinationFolder, lbl_usuario.getText(), currentDate.toString());
        for (File data : all)
        {
            try
            {
            String finalPath = BackupFolderPath + "\\" + data.getName();
            Path destination = Paths.get(finalPath);
            Files.copy(Paths.get(data.getAbsolutePath()), destination, StandardCopyOption.REPLACE_EXISTING);
            }
            catch(IOException e){}
        }
        File ImgDirectory = new File ("MEIA\\img");
        File [] allPics = ImgDirectory.listFiles();
        BackupFolderPath += "\\img";
        for (File picture : allPics)
        {
            try
            {
                String finalPicPath = BackupFolderPath + "\\" + picture.getName();
                Path PictureDestination = Paths.get(finalPicPath);
                Files.copy(Paths.get(picture.getAbsolutePath()), PictureDestination, StandardCopyOption.REPLACE_EXISTING);
            }
            catch (IOException d) {}
        }
        JOptionPane.showMessageDialog(rootPane, "BACKUP EXITOSO","Error", WIDTH);

        
        
        
        
        
    }//GEN-LAST:event_backupButtonActionPerformed

    private void btn_MantenimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MantenimiActionPerformed
                      MantenimientoUser abrir_mante = new MantenimientoUser();
                      abrir_mante.setLocationRelativeTo(null);
                      String user=lbl_usuario.getText();
                      abrir_mante.GetUsuario(user.trim());
                      user =lbl_rol.getText().trim();
                    abrir_mante.MoodFact(user.equals("Administrador"));
                    abrir_mante.show();
                    abrir_mante.setDefaultCloseOperation(DISPOSE_ON_CLOSE);   
    }//GEN-LAST:event_btn_MantenimiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Contactos contactos = new Contactos();
        contactos.setLocationRelativeTo(null);
        contactos.show();
        contactos.lbl_usuario.setText(lbl_usuario.getText());
        contactos.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_indizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_indizadoActionPerformed
        // TODO add your handling code here:
        Lista_Usuario nuevo = new Lista_Usuario();
        nuevo.setLocationRelativeTo(null);
        nuevo.lbl_usuario.setText(lbl_usuario.getText().trim());
        nuevo.show();
        nuevo.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_indizadoActionPerformed

    private void btn_bandeja_entradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bandeja_entradaActionPerformed
        // TODO add your handling code here:
        Bandeja_entrada bandeja_e = new Bandeja_entrada();
        bandeja_e.setLocationRelativeTo(null);
        bandeja_e.show();
        bandeja_e.lbl_usuario.setText(lbl_usuario.getText().trim());
        bandeja_e.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
    }//GEN-LAST:event_btn_bandeja_entradaActionPerformed

    private void btn_bandeja_salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bandeja_salidaActionPerformed
        // TODO add your handling code here:
        Bandeja_enviados bandeja_e = new Bandeja_enviados();
        bandeja_e.setLocationRelativeTo(null);
        bandeja_e.show();
        bandeja_e.lbl_usuario.setText(lbl_usuario.getText().trim());
        bandeja_e.panel_detalle.setVisible(false);
        bandeja_e.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_bandeja_salidaActionPerformed

    private void btn_correoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_correoActionPerformed
//         TODO add your handling code here:
        CorreoNuevo correo_nuevo = new CorreoNuevo() ;
        correo_nuevo.setLocationRelativeTo(null);
        correo_nuevo.show();
        correo_nuevo.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        correo_nuevo.lbl_usuario.setText(lbl_usuario.getText().trim());
    }//GEN-LAST:event_btn_correoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Listas nuevo = new Listas();
        nuevo.setLocationRelativeTo(null);
        nuevo.lbl_usuario.setText(lbl_usuario.getText().trim());
        nuevo.show();
        nuevo.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inicio I = new Inicio();
                I.setVisible(true);
                I.setLocationRelativeTo(null);
            }
        });            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton backupButton;
    public javax.swing.JButton btn_Mantenimi;
    private javax.swing.JButton btn_bandeja_entrada;
    private javax.swing.JButton btn_bandeja_salida;
    private javax.swing.JButton btn_correo;
    private javax.swing.JButton btn_indizado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel lbl_logo;
    public static javax.swing.JLabel lbl_photo;
    public static javax.swing.JLabel lbl_rol;
    public static javax.swing.JLabel lbl_usuario;
    // End of variables declaration//GEN-END:variables
}
